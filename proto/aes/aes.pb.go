// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/aes/aes.proto

package aes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The plaintext message to be encrypted.
type PlainTextMessage struct {
	PlaintextMessage     string   `protobuf:"bytes,1,opt,name=plaintext_message,json=plaintextMessage,proto3" json:"plaintext_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlainTextMessage) Reset()         { *m = PlainTextMessage{} }
func (m *PlainTextMessage) String() string { return proto.CompactTextString(m) }
func (*PlainTextMessage) ProtoMessage()    {}
func (*PlainTextMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6eadf787635f332, []int{0}
}

func (m *PlainTextMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlainTextMessage.Unmarshal(m, b)
}
func (m *PlainTextMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlainTextMessage.Marshal(b, m, deterministic)
}
func (m *PlainTextMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlainTextMessage.Merge(m, src)
}
func (m *PlainTextMessage) XXX_Size() int {
	return xxx_messageInfo_PlainTextMessage.Size(m)
}
func (m *PlainTextMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PlainTextMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PlainTextMessage proto.InternalMessageInfo

func (m *PlainTextMessage) GetPlaintextMessage() string {
	if m != nil {
		return m.PlaintextMessage
	}
	return ""
}

// The response message containing the information about encrypted message
// (runtime, plaintext, encrypted message)
type ReturnEncryptionInfo struct {
	EncryptionInfo       string   `protobuf:"bytes,1,opt,name=encryption_info,json=encryptionInfo,proto3" json:"encryption_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnEncryptionInfo) Reset()         { *m = ReturnEncryptionInfo{} }
func (m *ReturnEncryptionInfo) String() string { return proto.CompactTextString(m) }
func (*ReturnEncryptionInfo) ProtoMessage()    {}
func (*ReturnEncryptionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6eadf787635f332, []int{1}
}

func (m *ReturnEncryptionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnEncryptionInfo.Unmarshal(m, b)
}
func (m *ReturnEncryptionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnEncryptionInfo.Marshal(b, m, deterministic)
}
func (m *ReturnEncryptionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnEncryptionInfo.Merge(m, src)
}
func (m *ReturnEncryptionInfo) XXX_Size() int {
	return xxx_messageInfo_ReturnEncryptionInfo.Size(m)
}
func (m *ReturnEncryptionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnEncryptionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnEncryptionInfo proto.InternalMessageInfo

func (m *ReturnEncryptionInfo) GetEncryptionInfo() string {
	if m != nil {
		return m.EncryptionInfo
	}
	return ""
}

func init() {
	proto.RegisterType((*PlainTextMessage)(nil), "aes.PlainTextMessage")
	proto.RegisterType((*ReturnEncryptionInfo)(nil), "aes.ReturnEncryptionInfo")
}

func init() { proto.RegisterFile("proto/aes/aes.proto", fileDescriptor_d6eadf787635f332) }

var fileDescriptor_d6eadf787635f332 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4c, 0x2d, 0x06, 0x61, 0x3d, 0x30, 0x4f, 0x88, 0x39, 0x31, 0xb5, 0x58, 0xc9,
	0x9e, 0x4b, 0x20, 0x20, 0x27, 0x31, 0x33, 0x2f, 0x24, 0xb5, 0xa2, 0xc4, 0x37, 0xb5, 0xb8, 0x38,
	0x31, 0x3d, 0x55, 0x48, 0x9b, 0x4b, 0xb0, 0x00, 0x24, 0x56, 0x92, 0x5a, 0x51, 0x12, 0x9f, 0x0b,
	0x11, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x12, 0x80, 0x4b, 0x40, 0x15, 0x2b, 0xd9, 0x73,
	0x89, 0x04, 0xa5, 0x96, 0x94, 0x16, 0xe5, 0xb9, 0xe6, 0x25, 0x17, 0x55, 0x16, 0x94, 0x64, 0xe6,
	0xe7, 0x79, 0xe6, 0xa5, 0xe5, 0x0b, 0xa9, 0x73, 0xf1, 0xa7, 0xc2, 0x45, 0xe2, 0x33, 0xf3, 0xd2,
	0xf2, 0xa1, 0x46, 0xf0, 0xa5, 0xa2, 0x28, 0x34, 0xf2, 0xe6, 0x62, 0x76, 0x4c, 0x2d, 0x16, 0x72,
	0xe1, 0xe2, 0x0b, 0xce, 0xc8, 0x2f, 0x47, 0x98, 0x22, 0x24, 0xaa, 0x07, 0x72, 0x2b, 0xba, 0xeb,
	0xa4, 0x24, 0xc1, 0xc2, 0xd8, 0xec, 0x54, 0x62, 0x70, 0x32, 0x89, 0x32, 0x4a, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x2f, 0xcb, 0xc8, 0x2c, 0x4b, 0xd5, 0x2d, 0x4e, 0x2d,
	0x2a, 0x4b, 0x2d, 0xca, 0x49, 0x2d, 0x2e, 0xd6, 0x2f, 0x0b, 0x2e, 0x4f, 0x2c, 0xca, 0xd5, 0x85,
	0x84, 0x06, 0x3c, 0x4c, 0x92, 0xd8, 0xc0, 0x4c, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x08,
	0x00, 0x64, 0x38, 0x27, 0x01, 0x00, 0x00,
}
